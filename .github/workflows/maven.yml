name: CI-CD Spring PetClinic

on:
  push:
    branches: [ dev ]
  pull_request:

jobs:
  build-analyze-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_HUB_REPO: yourusername/spring-petclinic

    steps:
    # 1️⃣ تحميل الكود من GitHub
    - name: Checkout code
      uses: actions/checkout@v3

    # 2️⃣ إعداد Java 17
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: temurin

    # 3️⃣ Cache لمكتبات Maven
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # 4️⃣ بناء مشروع Spring PetClinic
    - name: Build project
      run: mvn clean package -DskipTests

    # 5️⃣ تشغيل SonarQube Docker
    - name: Start SonarQube
      run: docker run -d --name sonarqube -p 9000:9000 sonarqube:lts

    - name: Wait for SonarQube to start
      run: sleep 40

    # 6️⃣ تحليل المشروع على SonarQube
    - name: Run SonarQube analysis
      run: mvn sonar:sonar \
           -Dsonar.projectKey=spring-petclinic \
           -Dsonar.host.url=http://localhost:9000 \
           -Dsonar.login=admin

    - name: Stop SonarQube
      run: docker stop sonarqube && docker rm sonarqube

    # 7️⃣ تسجيل الدخول على Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 8️⃣ بناء Docker image للمشروع
    - name: Build Docker image
      run: docker build -t $DOCKER_HUB_REPO:latest .

    # 9️⃣ رفع الصورة على Docker Hub
    - name: Push Docker image
      run: docker push $DOCKER_HUB_REPO:latest
